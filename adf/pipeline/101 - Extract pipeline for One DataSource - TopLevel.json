{
	"name": "101 - Extract pipeline for One DataSource - TopLevel",
	"properties": {
		"activities": [
			{
				"name": "GetSumOfTablesToExtract",
				"description": "Count the total number of tables required to be extracted in this run.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GenerateDataForExtractRuntime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT COUNT(*) AS count\nFROM [ETL].[ExtractControlTableRuntime]\nWHERE PipelineRunId = '@{pipeline().parameters.MasterPipelineRunId}'\n    AND LineageKey = @{pipeline().parameters.MasterSettings.MasterEtlLineageKey}\n\n-- SELECT count(*) AS count FROM @{pipeline().parameters.MainControlTableName} WHERE DataSourceId=@{pipeline().parameters.DataSource.DataSourceId} AND ExtractEnabled = 1\n\n-- SELECT count(*) AS count \n-- FROM @{pipeline().parameters.MainControlTableName} tbControl\n-- \tOUTER APPLY \n--         (\n--             SELECT TOP 1 * FROM [ETL].[EtlLog] \n--             WHERE LineageKey = @{pipeline().parameters.MasterSettings.MasterEtlLineageKey} AND StageName = 'EXTRACT'\n--                 AND EtlLog.ExtractLoadControlTableId = tbControl.Id\n--             ORDER BY CreatedDateUtc DESC\n--         ) tbLog\n-- WHERE \n--     DataSourceId = @{pipeline().parameters.DataSource.DataSourceId} AND ExtractEnabled = 1\n--     AND (tbLog.EtlStatus = 'FAILED' OR tbLog.EtlStatus IS NULL)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerDestinationDS_tnu",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "ExtractBatchesOfTablesSequentially",
				"description": "Come up with the number of sequential batches based on the max allowed concurrent copy (extract) tasks, and then execute another pipeline to copy different batches sequentially.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetSumOfTablesToExtract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, add(div(activity('GetSumOfTablesToExtract').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks),\n                    if(equals(mod(activity('GetSumOfTablesToExtract').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks), 0), 0, 1)))",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "ExtractTablesInOneBatch",
							"description": "Execute another pipeline to extract one batch of tables. The tables belonging to this batch will be extracted parallelly.",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "102 - Extract pipeline for One DataSource - MiddleLevel",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"MaxNumberOfTablesReturnedFromLookupActivity": {
										"value": "@pipeline().parameters.MaxNumberOfTablesReturnedFromLookupActivity",
										"type": "Expression"
									},
									"CurrentSequentialNumberOfBatch": {
										"value": "@item()",
										"type": "Expression"
									},
									"SumOfTablesToExtract": {
										"value": "@activity('GetSumOfTablesToExtract').output.firstRow.count",
										"type": "Expression"
									},
									"SumOfTablesToExtractForCurrentBatch": {
										"value": "@min(pipeline().parameters.MaxNumberOfConcurrentTasks, activity('GetSumOfTablesToExtract').output.firstRow.count)",
										"type": "Expression"
									},
									"MainControlTableName": {
										"value": "@pipeline().parameters.MainControlTableName",
										"type": "Expression"
									},
									"DataSource": {
										"value": "@pipeline().parameters.DataSource",
										"type": "Expression"
									},
									"MasterSettings": {
										"value": "@pipeline().parameters.MasterSettings",
										"type": "Expression"
									},
									"MasterPipelineRunId": {
										"value": "@pipeline().parameters.MasterPipelineRunId",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "GenerateDataForExtractRuntime",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ETL].[ExtractEtlGenerateDataForExtractRuntime]",
					"storedProcedureParameters": {
						"DataSourceId": {
							"value": {
								"value": "@pipeline().parameters.DataSource.DataSourceId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"MasterEtlLineageKey": {
							"value": {
								"value": "@pipeline().parameters.MasterSettings.MasterEtlLineageKey",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"PipelineRunId": {
							"value": {
								"value": "@pipeline().parameters.MasterPipelineRunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "OnPremDHW_tnu",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"MaxNumberOfTablesReturnedFromLookupActivity": {
				"type": "int",
				"defaultValue": 5000
			},
			"MaxNumberOfConcurrentTasks": {
				"type": "int",
				"defaultValue": 10
			},
			"MainControlTableName": {
				"type": "string",
				"defaultValue": "[ETL].[ExtractLoadControlTable]"
			},
			"DataSource": {
				"type": "object"
			},
			"MasterSettings": {
				"type": "object"
			},
			"MasterPipelineRunId": {
				"type": "string"
			}
		},
		"folder": {
			"name": "1. Extract Pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2022-02-25T07:33:51Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}